name: Semantic Versioning Release

on:
  push:
    branches:
      - main
      - develop
  workflow_call:
    secrets:
      RELEASE_GH_TOKEN:
        description: "GitHub Token. Used to authenticate with GitHub at release step. This will overwrite the use of the default GitHub token."
        required: false
      BUILD_GH_TOKEN:
        description: "GitHub Token. Used to authenticate with GitHub at build step. This will overwrite the use of the default GitHub token."
    outputs:
      version:
        description: "The version of the release. Will be null if no release was made."
        value: ${{ jobs.semantic-realease.outputs.version }}

jobs:
  semantic-realease:
    name: Semantic release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm install @semantic-release/exec @semantic-release/commit-analyzer @semantic-release/git @semantic-release/github @semantic-release/release-notes-generator conventional-changelog-conventionalcommits -D
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GH_TOKEN || secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.RELEASE_GH_TOKEN || secrets.GITHUB_TOKEN }}
        run: npx semantic-release | tee semantic-release.log
      - name: Archive release log
        uses: actions/upload-artifact@v5
        with:
          name: semantic-release.log
          path: semantic-release.log
      - name: Get version
        id: version
        run: echo version=$(cat semantic-release.log | grep -oP "next release version is \K.*") >> $GITHUB_OUTPUT
